/** 전역 객체의 개념
 * Description: 어디서나 사용할 수 있는 객체를 말한다.
 * 
 * "global": require(), setTimeout(), console.log() 등
 */

/** 모듈의 종류
 * 기본 모듈 / 확장 모듈: 기본적으로 설치되어 있는가
 * 일반 모듈 / 네이티브 모듈: 단순히 자바스크립트로 작성하였는지, C/C++ 등 다른 언어로 개발하였는가
 * 글로벌 모듈 / 로컬 모듈: 현재 웹 어플리케이션만을 위해 설치했는가
 */

/** 기본 모듈 / 확장 모듈
 * 
 * 기본 모듈
 *  노드를 설치하면 기본으로 설치되는 모듈
 *  파일 입출력, 이벤트 관리, HTTP 프로토콜 관리 등
 *  노드의 비동기 입출력 처리를 위한 기본적인 기능 제공
 * 
 * 확장 모듈
 *  노드의 기능을 확장하기 위한 것
 *  좀 더 쉬운 HTTP 서버 생성, 기본 파일 입출력에서 제공하지 않는 기능 추가 등
 *  express처럼 하나의 프레임워크로서 제공되기도 함
 *  mongodb를 사용하기 위한 mongoose나 mongolian처럼 다른 기술을 손쉽게 끌어와 사용할 수 있게 도와주는 역할도 한다.
 */

/** 일반 모듈 / 네이티브 모듈
 * 
 * 일반 모듈
 *  노드의 모듈 인터페이스를 통해 간단히 자바스크립트로 개발된 모듈
 * 
 * 네이티브 모듈
 *  네이티브 프로그래밍 언어인 C/C++로 개발한 노드의 모듈
 */

/** 글로벌 모듈 / 로컬 모듈
 * 
 * 글로벌 모듈
 *  기본 모듈을 포함해 어디서든 사용할 수 있도록 설치한 확장 모듈
 * 
 * 로컬 모듈
 *  해당 어플리케이션에서만 사용하기 위해 설치한 확장 모듈이나 개발자가 개발한 모듈
 * 
 * 확장 모듈을 글로벌로 사용하려면 특별한 옵션(-g)을 사용하면 된다.
 */

/** 복합 모듈
 * Descripiton: 내부 모듈이나 데이터 파일, 템플릿, 테스트 코드 등을 포함하는 모듈
 * 모듈을 구성하는 단위가 폴더이며, 내부적으로도 폴더를 가질 수 있다.
 * 
 * require() 메소드가 이런 폴더 단위의 모듈을 인식하려면 index.js나 package.json 파일 중 하나가 있어야 한다.
 */

/** 모듈 식별자
 * 노드의 모듈 이름으로는 확장자 없는 전체 경로를 사용한다.
 * 
 * 식별자 종류
 *  - 상대적 식별자
 *  - 절대적 식별자
 *  - 최상위 레벨 식별자
 */

    /** 상대적 식별자
     * 
     *  현재 위치를 기준으로 상대적인 기준에 있는 모듈을 찾는 식별자이다.
     *  ./를 생략하면 현재 위치에서 모듈을 찾지 않으니 주의해야 한다.
     * 
     *  예) require('./sample_module');
     */

    /** 절대적 식별자
     * 
     * 절대 위치를 기준으로 그 경로에 맞는 모듈을 찾는 식별자이다.
     * 
     * 예) require('usr/local/node_modules/sample_module/sample_module');
     */

    /** 최상위 레벨 식별자
     * 
     * 모듈 이름만 입력하면 최상위 레벨 식별자로 인식하고 설치된 전체 확장 모듈이나 기본 모듈 중에서 해당 모듈 이름을 검색하여 로드한다.
     * 
     * 예) require('sample_module');
     * 
     * 찾는 순서가 중요하다.
     *  만약 이 모듈이 기본모듈에서 찾을 수 없다면, 상위 디렉토리를 차례로 탐색한다.
     *  예)
     *  /home/goorm/example_project/node_modules/sample_module.js
     *  /home/goorm/node_modules/sample_module.js
     *  /home/node_modules/sample_module.js
     *  /node_modules/sample_module.js
     */

    /** require() 메소드와 module.exports
     * 
     * 노드는 HTML을 사용하지 않으므로 서로 다른 자바스크립트 파일들이 서로 참조하고 호출하는 방법이 필요하다.
     * 
     * require() 메소드는 모듈 식별자인 module.exports를 이용해 모듈이 제공하는 함수나 객체를 반환한다.
     * 만약 불러온 것이 다른 모듈이 있어야 한다면 그 모듈도 같이 로드한다.
     */